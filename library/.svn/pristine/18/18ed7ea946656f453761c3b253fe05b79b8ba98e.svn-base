package com.nchu.library.web.wechat;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.nchu.library.dao.OrderInfoDao;
import com.nchu.library.dto.CodeMsg;
import com.nchu.library.entity.OrderInfo;
import com.nchu.library.service.OrderInfoService;
import com.nchu.library.util.HttpServletRequestUtil;

@Controller
@RequestMapping("/manage")
public class OrderManageController {
	@Autowired
	private OrderInfoService orderInfoService;
	
	@RequestMapping(value = "/updateOrderinfo", method = RequestMethod.GET)
	@ResponseBody
	private Map<String,Object> updateOrderInfo(HttpServletRequest request){
		Map<String,Object> modelMap=new HashMap<String, Object>();
		OrderInfo orderInfo=new OrderInfo();
		String userno=HttpServletRequestUtil.getString(request,"userno");
		String username=HttpServletRequestUtil.getString(request,"username");
		String userqq=HttpServletRequestUtil.getString(request,"userqq");
		Date ordertm=HttpServletRequestUtil.getDate(request,"ordertm");
		int orderstatus=HttpServletRequestUtil.getInt(request,"orderstatus");
		String orderno=HttpServletRequestUtil.getString(request,"orderno");
		String ordermemo=HttpServletRequestUtil.getString(request,"ordermemo");
		orderInfo.setUserNo(userno);
		orderInfo.setUserName(username);
		orderInfo.setUserqq(userqq);
		orderInfo.setOrderTm(ordertm);
		orderInfo.setOrderStatus(orderstatus);
		orderInfo.setOrderNo(orderno);
		orderInfo.setOrderMemo(ordermemo);
		
		try {
			int effNum=orderInfoService.updateOrderInfo(orderInfo);
			if(effNum>0) {
				modelMap.put("code",CodeMsg.SUCCESS);
			}else {
				modelMap.put("code",CodeMsg.FAILURE);
			}
		}catch(Exception e) {
			modelMap.put("code",CodeMsg.FAILURE);
			modelMap.put("errMsg",e.getMessage());
		}
		return modelMap;
	}
	
	
	@RequestMapping(value = "/deleteOrderinfo", method = RequestMethod.GET)
	@ResponseBody
	private Map<String,Object> deleteOrderInfo(HttpServletRequest request){
		Map<String,Object> modelMap=new HashMap<String,Object>();
		int orderid=HttpServletRequestUtil.getInt(request,"orderid");
		int effNum=0;
		try{
			effNum=orderInfoService.deleteOrderInfo(orderid);
			if(effNum>0) {
				modelMap.put("code",CodeMsg.SUCCESS);
			}else {
				modelMap.put("code",CodeMsg.FAILURE);
			}
		}catch(Exception e) {
			modelMap.put("code",CodeMsg.FAILURE);
			modelMap.put("errMsg",e.getMessage());
		}

		return modelMap;
	}

}
